target = precise.Example00

@using=jpf-regression

classpath = ${NEW_VERSION}/build/tests

sourcepath = ${NEW_VERSION}/src/tests

symbolic.method= precise.Example00.test(sym#sym#sym#sym)

rse.ASTResults = ${RESULTS}/diffFiles/precise/Example00.xml

rse.newClassInfo = ${NEW_VERSION}/build/tests/precise/Example00.class

rse.oldClassInfo = ${OLD_VERSION}/bin/precise/Example00.class

rse.dotFile = ${RESULTS}/dotFiles/precise

rse.testFile = ${RESULTS}/testFiles/precise
rse.testCases = true
rse.html = true

# listener to print information (PCs, test cases) about symbolic run
listener = gov.nasa.jpf.regression.listener.InterProcPruningListener;gov.nasa.jpf.regression.listener.RSESymbolicListener

#If we don't set the bounds then one of the constraints times out.
symbolic.minint=-100

symbolic.maxint=100

symbolic.minreal=-1000.0

symbolic.maxreal=1000.0

symbolic.undefined=0
